version: "3"
services:
    results-control-api-gateway-svc:
        container_name: results-control-api-gateway_docker
        build:
            context: results-control-api-gateway
            dockerfile: ../Dockerfile

        image: personal-information_docker:latest
        networks:
            - network
        ports:
            - "8080:8080"
#        depends_on:
        links:
            - personal-information-svc
            - academic-performance-svc
            - period-planning-svc
            - schedule-calendar-svc

    personal-information-svc:
        container_name: personal-information_docker
        build:
            context: personal-information
            dockerfile: ../Dockerfile

        image: personal-information_docker:latest
        networks:
            - network
        ports:
            - "8083:8080"
#        depends_on:
        links:
            - db_pi

    academic-performance-svc:
        container_name: academic-performance_docker
        build:
            context: academic-performance
            dockerfile: ../Dockerfile

        image: academic-performance_docker:latest
        networks:
            - network
        ports:
            - "8084:8080"
#        depends_on:
        links:
            - db_ap

    period-planning-svc:
        container_name: period-planning_docker
        build:
            context: period-planning
            dockerfile: ../Dockerfile

        image: period-planning_docker:latest
        networks:
            - network
        ports:
            - "8085:8080"
#        depends_on:
        links:
            - db_pp

    schedule-calendar-svc:
        container_name: schedule-calendar_docker
        build:
            context: schedule-calendar
            dockerfile: ../Dockerfile

        image: schedule-calendar_docker:latest
        networks:
            - network
        ports:
            - "8086:8080"
#        depends_on:
        links:
            - db_sc


    rabbitMQ:
       image: rabbitmq:latest
#       image: rabbitmq:management
       container_name: rabbitmq
#       volumes:
#            - ./docker/rabbitmq/etc/:/etc/rabbitmq/
#            - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
#            - ./docker/rabbitmq/logs/:/var/log/rabbitmq/
       environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
       ports:
         - "5672:5672"
         - "15672:15672"

       networks:
           - network

#create DB for all services: academic-performance (ap), period-planning(pp), schedule-calendar(sc), personal-information(pi)
    db_ap:
        image: "postgres" # use latest official postgres version
        container_name: db_ap
        env_file:
           - database.env # configure postgres
#        ports:
#           - ${POSTGRES_PORT_AP:-5436}:5432
        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - network


    db_pp:
        image: "postgres" # use latest official postgres version
        container_name: db_pp
        env_file:
           - database.env # configure postgres
#        ports:
#           - ${POSTGRES_PORT_PP:-5433}:5432
        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql

        networks:
            - network


    db_sc:
        image: "postgres" # use latest official postgres version
        container_name: db_sc
        env_file:
           - database.env # configure postgres
#        ports:
#           - ${POSTGRES_PORT_SC:-5434}:5432
        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql

        networks:
            - network

    db_pi:
        image: "postgres" # use latest official postgres version
        container_name: db_pi
        env_file:
           - database.env # configure postgres
        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql

#        ports:
#           - ${POSTGRES_PORT_PI:-5435}:5432
#        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
#          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - network


networks:
  # Declare our private network.  We must declare one for the magic
  # Docker DNS to work, but otherwise its default settings are fine.
  network: {}
