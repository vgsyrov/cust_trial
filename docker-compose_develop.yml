version: "3"
services:

    rabbitMQ:
#       image: rabbitmq:latest
       image: rabbitmq:management
       container_name: rabbitmq
#       volumes:
#            - ./docker/rabbitmq/etc/:/etc/rabbitmq/
#            - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
#            - ./docker/rabbitmq/logs/:/var/log/rabbitmq/
       environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
       ports:
         - "5672:5672"
         - "15672:15672"

       networks:
            - network

#create DB for all services: academic-performance (ap), period-planning(pp), schedule-calendar(sc), personal-information(pi)
    db_ap:
        image: "postgres" # use latest official postgres version
        container_name: db_ap
        env_file:
           - database.env # configure postgres
        ports:
           - ${POSTGRES_PORT_AP:-5432}:5432
#        volumes:
#           - pg_db:/var/lib/postgresql/data

    db_pp:
        image: "postgres" # use latest official postgres version
        container_name: db_pp
        env_file:
           - database.env # configure postgres
        ports:
           - ${POSTGRES_PORT_PP:-5433}:5432

    db_sc:
        image: "postgres" # use latest official postgres version
        container_name: db_sc
        env_file:
           - database.env # configure postgres
        ports:
           - ${POSTGRES_PORT_SC:-5434}:5432

    db_pi:
        image: "postgres" # use latest official postgres version
        container_name: db_pi
        env_file:
           - database.env # configure postgres
        ports:
           - ${POSTGRES_PORT_PI:-5435}:5432
#        volumes:
#          - ./pg_db/database_data:/var/lib/postgresql/data
#          - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql




networks:
  # Declare our private network.  We must declare one for the magic
  # Docker DNS to work, but otherwise its default settings are fine.
  network: {}
